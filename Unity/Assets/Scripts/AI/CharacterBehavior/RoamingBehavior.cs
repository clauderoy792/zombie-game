/*
*   This script has been auto-generated by the Behavior Tree Editor. Altering the script may cause issues.
*/

public class RoamingBehavior : BehaviorTree
{
	GoHome mGoHomeAction;
	RecoverEnergy mRecoverEnergyAction;
	GoToToilet mGoToToiletAction;
	WaitForAvailableToilet mWaitForAvailableToiletAction;
	MoveToToiletDoor mMoveToToiletDoor;
	ToiletAction mToiletAction;
	GoToCafeteria mGoToCafeteriaAction;
	EatAction mEatAction;
	GoToWork mGoToWorkAction;
	WorkAction mWorkAction;
	RoamingAction mRoamingAction;
	GoToTarget mGoToTargetAction; 
	
	public GoHome GoHomeAction {
		get {
			return this.mGoHomeAction;
		}
	}

	public RecoverEnergy RecoverEnergyAction {
		get {
			return this.mRecoverEnergyAction;
		}
	}
	
	public EatAction EatAction {
		get {
			return this.mEatAction;
		}
	}

	public GoToCafeteria GoToCafeteriaAction {
		get {
			return this.mGoToCafeteriaAction;
		}
	}

	public GoToToilet GoToToiletAction {
		get {
			return this.mGoToToiletAction;
		}
	}

	public GoToWork GoToWorkAction {
		get {
			return this.mGoToWorkAction;
		}
	}

	public ToiletAction ToiletAction {
		get {
			return this.mToiletAction;
		}
	}

	public WaitForAvailableToilet WaitForAvailableToiletAction {
		get {
			return this.mWaitForAvailableToiletAction;
		}
	}

	public WorkAction WorkAction {
		get {
			return this.mWorkAction;
		}
	}

	public GoToTarget GoToTargetAction {
		get {
			return this.mGoToTargetAction;
		}
	}

	public RoamingAction RoamingAction {
		get {
			return this.mRoamingAction;
		}
	}	
	
	
	public RoamingBehavior(Character aCharacter) : base(aCharacter)
	{
		mGoHomeAction = new GoHome(mCharacter as Human);
		mRecoverEnergyAction = new RecoverEnergy(mCharacter as Human);
		mGoToToiletAction = new GoToToilet(mCharacter as Human);
		mWaitForAvailableToiletAction = new WaitForAvailableToilet(mCharacter as Human);
		mToiletAction = new ToiletAction(mCharacter as Human);
		mGoToCafeteriaAction = new GoToCafeteria(mCharacter as Human);
		mMoveToToiletDoor = new MoveToToiletDoor(mCharacter as Human);
		mEatAction = new EatAction(mCharacter as Human);
		mGoToWorkAction = new GoToWork(mCharacter as Human);
		mWorkAction = new WorkAction(mCharacter as Human);
		mGoToTargetAction = new GoToTarget(mCharacter);
		mRoamingAction = new RoamingAction(mCharacter);
		
		InitializeTree();
	}

	protected override void InitializeTree ()
	{
		Sequence goHomeSeq = new Sequence(mCharacter as Human);
		goHomeSeq.AddChild(mGoHomeAction);
		goHomeSeq.AddChild(mRecoverEnergyAction);
		Sequence toiletSeq = new Sequence(mCharacter as Human);
		toiletSeq.AddChild(mGoToToiletAction);
		toiletSeq.AddChild(mWaitForAvailableToiletAction);
		toiletSeq.AddChild(mMoveToToiletDoor);
		toiletSeq.AddChild(mToiletAction);
		Sequence cafeteriaSeq = new Sequence(mCharacter as Human);
		cafeteriaSeq.AddChild(mGoToCafeteriaAction);
		cafeteriaSeq.AddChild(mEatAction);
		Selector targetSelector = new Selector(mCharacter as Human);
		targetSelector.AddChild(mGoToTargetAction);
		targetSelector.AddChild(mRoamingAction);
		mRoot.AddChild(goHomeSeq);
		mRoot.AddChild(toiletSeq);
		mRoot.AddChild(cafeteriaSeq);
		mRoot.AddChild(targetSelector);
	}
}
